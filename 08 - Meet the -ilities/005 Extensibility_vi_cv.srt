1
00:00:00,230 --> 00:00:04,100
Thuộc tính chất lượng tiếp theo mà chúng ta sẽ nói đến là khả năng mở rộng.

2
00:00:04,340 --> 00:00:11,240
Một hệ thống thực hiện khả năng mở rộng hoặc một hệ thống có thể mở rộng là một hệ thống mà chức năng của nó có thể

3
00:00:11,240 --> 00:00:14,060
có thể mở rộng mà không cần sửa đổi mã hiện có.

4
00:00:14,090 --> 00:00:16,940
Hãy cùng giải thích thông qua một ví dụ thực tế.

5
00:00:17,830 --> 00:00:22,300
Giả sử chúng ta có một hệ thống thông tin có API để truy vấn dữ liệu.

6
00:00:22,330 --> 00:00:29,780
API có một tham số cụ thể gọi là format để chỉ định định dạng chính xác của dữ liệu sẽ được trả về.

7
00:00:29,800 --> 00:00:33,790
Vào ngày đầu tiên, hệ thống hỗ trợ hai định dạng Json và XML.

8
00:00:33,820 --> 00:00:37,300
Mọi người đều hài lòng với định dạng này và hệ thống hoạt động hoàn hảo.

9
00:00:37,330 --> 00:00:42,660
Sau đó, một ngày nọ, chúng tôi nhận được yêu cầu mới đòi hỏi phải thêm định dạng mới vào danh sách.

10
00:00:42,670 --> 00:00:43,600
CSV.

11
00:00:44,530 --> 00:00:50,230
Bây giờ trên một hệ thống ngây thơ, phần tạo ra định dạng được tạo ra như một lớp duy nhất chứa một

12
00:00:50,230 --> 00:00:56,370
câu lệnh chuyển đổi kiểm tra định dạng bắt buộc là gì và thực thi mã theo đúng mã đã xây dựng

13
00:00:56,380 --> 00:00:57,070
như thế đó.

14
00:00:57,100 --> 00:00:59,650
Yêu cầu mới này đặt ra một vấn đề nghiêm trọng.

15
00:00:59,650 --> 00:01:05,379
Bây giờ chúng ta phải sửa đổi một phần cốt lõi của mã và sau đó thực hiện tất cả các thử nghiệm cần thiết để đảm bảo

16
00:01:05,379 --> 00:01:06,730
chúng tôi không làm hỏng bất cứ thứ gì.

17
00:01:06,880 --> 00:01:10,180
Trong một hệ thống có thể mở rộng, quá trình này khá khác biệt.

18
00:01:10,210 --> 00:01:15,280
Trong một hệ thống như vậy, chúng ta không cần phải sửa đổi mã gốc mà chỉ cần mở rộng nó.

19
00:01:15,310 --> 00:01:18,140
Vậy mở rộng mã có nghĩa là gì?

20
00:01:18,140 --> 00:01:24,470
Bằng cách mở rộng, chúng tôi muốn nói rằng chúng tôi có thể thêm mã mới vào ứng dụng và làm cho nó hoạt động mà không cần sửa đổi

21
00:01:24,470 --> 00:01:25,820
mã gốc.

22
00:01:25,850 --> 00:01:28,460
Có nhiều phương pháp khác nhau để mở rộng như vậy.

23
00:01:28,460 --> 00:01:31,580
Ví dụ như kế thừa, khung plugin và nhiều thứ khác.

24
00:01:31,610 --> 00:01:37,130
Một trong những mô hình phổ biến nhất là sử dụng một khuôn khổ plugin với một sự phụ thuộc tiêm tương tự như

25
00:01:37,130 --> 00:01:38,270
mã được hiển thị ngay bây giờ.

26
00:01:40,250 --> 00:01:47,690
Trong mã này, tên định dạng là XML, Json hoặc CSV hoặc bất kỳ định dạng nào khác trong tương lai được chuyển đến

27
00:01:47,690 --> 00:01:48,710
phương pháp nhà máy.

28
00:01:48,710 --> 00:01:49,880
Nhận định dạng.

29
00:01:50,330 --> 00:01:54,230
Phương thức nhà máy trả về một triển khai của giao diện định dạng I.

30
00:01:54,230 --> 00:01:59,300
Lưu ý rằng mã gọi không biết nội dung cụ thể được trả về là gì.

31
00:01:59,510 --> 00:02:01,400
Chúng ta sẽ thảo luận thêm về vấn đề này sau.

32
00:02:01,400 --> 00:02:06,170
Nhưng điều quan trọng cần hiểu về thuộc tính chất lượng khả năng mở rộng là các phương pháp như vậy

33
00:02:06,170 --> 00:02:11,000
tồn tại và chúng cho phép chúng ta mở rộng chức năng của hệ thống mà không cần sửa đổi mã của nó.

