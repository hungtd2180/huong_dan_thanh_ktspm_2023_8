1
00:00:00,260 --> 00:00:05,180
Việc lựa chọn công nghệ lưu trữ dữ liệu là một trong những quyết định quan trọng nhất mà bạn sẽ đưa ra trong dự án

2
00:00:05,180 --> 00:00:05,660
thiết kế.

3
00:00:05,689 --> 00:00:10,610
Rốt cuộc, đây chính là nơi lưu trữ dữ liệu quý giá của bạn để sử dụng cho ứng dụng.

4
00:00:10,760 --> 00:00:12,320
Vậy chúng ta phải làm thế nào?

5
00:00:12,470 --> 00:00:17,360
Trước tiên, chúng ta hãy cùng tìm hiểu về hai loại kho dữ liệu hiện nay.

6
00:00:17,450 --> 00:00:23,540
Lưu ý rằng chúng tôi không nói ở đây về các sản phẩm DataStore như SQL Server hoặc MongoDB, mà là về

7
00:00:23,540 --> 00:00:29,630
hai khái niệm về kho dữ liệu, đó là SQL và NoSQL.

8
00:00:29,780 --> 00:00:34,400
Bây giờ bạn có thể đã nghe về hai khái niệm đó, nhưng chỉ để đảm bảo rằng tất cả chúng ta đều có cùng quan điểm

9
00:00:34,400 --> 00:00:37,070
trang, chúng ta hãy giải thích từng loại là gì.

10
00:00:37,580 --> 00:00:42,140
Cơ sở dữ liệu SQL hoặc cơ sở dữ liệu quan hệ là những cơ sở dữ liệu truyền thống hơn.

11
00:00:42,140 --> 00:00:46,040
Họ đã hoạt động gần 40 năm và phục vụ tốt cho ngành.

12
00:00:46,070 --> 00:00:51,570
Các cơ sở dữ liệu quan hệ phổ biến nhất là Microsoft, SQL Server, Oracle và MySQL.

13
00:00:51,590 --> 00:00:54,710
Cơ sở dữ liệu quan hệ có một số đặc điểm chung.

14
00:00:54,950 --> 00:00:57,050
Họ lưu trữ dữ liệu trong các bảng.

15
00:00:57,050 --> 00:01:03,360
Mỗi bảng lưu trữ một loại thực thể cụ thể và mỗi bảng có một tập hợp các cột cụ thể biểu diễn

16
00:01:03,360 --> 00:01:05,430
các tính chất khác nhau của các thực thể.

17
00:01:05,459 --> 00:01:11,610
Ví dụ, bảng sau đây minh họa cách một thực thể đơn giản hóa rất nhiều sẽ được biểu diễn

18
00:01:11,610 --> 00:01:13,410
trong cơ sở dữ liệu quan hệ.

19
00:01:13,890 --> 00:01:19,420
Các bảng có thể có mối quan hệ với nhau, do đó có mối quan hệ trong tên cơ sở dữ liệu.

20
00:01:19,440 --> 00:01:25,980
Ví dụ, nếu tôi có một bảng đơn hàng, nó có thể cũng sẽ có một bảng mục đơn hàng sẽ

21
00:01:25,980 --> 00:01:27,630
chứa các mục trong đơn hàng.

22
00:01:27,660 --> 00:01:32,640
Mỗi hàng trong bảng mục đơn hàng liên quan đến một đơn hàng cụ thể trong bảng đơn hàng.

23
00:01:32,670 --> 00:01:36,660
Mối quan hệ này được thực hiện với trường ID đơn hàng của mục đơn hàng.

24
00:01:37,050 --> 00:01:41,460
Một đặc điểm khác của cơ sở dữ liệu quan hệ là giao dịch.

25
00:01:41,490 --> 00:01:47,670
Một giao dịch biểu diễn một tập hợp nguyên tử các hành động thực hiện tất cả các hành động hoặc không thực hiện hành động nào

26
00:01:47,700 --> 00:01:48,210
của họ.

27
00:01:48,240 --> 00:01:52,570
Không có cách nào để chỉ một phần hành động trong giao dịch được thực hiện.

28
00:01:52,620 --> 00:01:58,810
Ví dụ, nếu khách hàng đặt một mặt hàng vào đơn hàng, số lượng mặt hàng đó phải giảm đi một.

29
00:01:58,830 --> 00:02:02,760
Không bao giờ được xảy ra trường hợp sản phẩm đã được đặt nhưng số lượng hàng vẫn chưa được cập nhật.

30
00:02:02,790 --> 00:02:04,350
Đây là một giao dịch.

31
00:02:04,560 --> 00:02:09,509
Giao dịch được định nghĩa bằng từ viết tắt acid, có nghĩa là Atomicity.

32
00:02:09,539 --> 00:02:13,440
Tính nhất quán, tính cô lập và độ bền.

33
00:02:13,470 --> 00:02:17,490
Chỉ có cơ sở dữ liệu hỗ trợ tất cả những điều này mới có thể tuyên bố hỗ trợ giao dịch.

34
00:02:18,150 --> 00:02:23,070
Giao dịch là một trong những khả năng quan trọng nhất của cơ sở dữ liệu quan hệ và tất nhiên chúng

35
00:02:23,070 --> 00:02:24,060
được sử dụng rộng rãi.

36
00:02:24,090 --> 00:02:29,040
Tất nhiên, có rất nhiều điều để nói về các giao dịch trong cơ sở dữ liệu quan hệ, nhưng điều đó sẽ được đưa ra

37
00:02:29,040 --> 00:02:30,390
về phạm vi của khóa học này.

38
00:02:30,840 --> 00:02:34,690
Đặc điểm cuối cùng chúng ta sẽ nói đến là ngôn ngữ truy vấn.

39
00:02:34,710 --> 00:02:38,870
Tất cả các cơ sở dữ liệu quan hệ đều cho phép truy vấn dữ liệu bằng Ngôn ngữ SQL.

40
00:02:38,880 --> 00:02:46,020
SQL, viết tắt của Structured Query Language, là một ngôn ngữ rất hoàn thiện được IBM giới thiệu

41
00:02:46,050 --> 00:02:47,520
hơn 40 năm trước.

42
00:02:47,550 --> 00:02:52,860
Nó cho phép truy vấn và sửa đổi dữ liệu bằng ngôn ngữ dễ hiểu và được coi là de facto

43
00:02:52,860 --> 00:02:56,310
tiêu chuẩn để truy cập dữ liệu trong cơ sở dữ liệu quan hệ.

44
00:02:56,340 --> 00:03:02,640
Ví dụ, đây là một đoạn mã SQL minh họa việc truy vấn bảng đơn hàng cho các đơn hàng đã

45
00:03:02,640 --> 00:03:05,790
được tạo ra kể từ ngày 1 tháng 1 năm 2018.

46
00:03:06,420 --> 00:03:09,480
Và bây giờ chúng ta hãy xem xét cơ sở dữ liệu NoSQL.

47
00:03:09,510 --> 00:03:14,860
Đúng như tên gọi của nó, cơ sở dữ liệu NoSQL cố gắng trở thành đối lập với cơ sở dữ liệu SQL.

48
00:03:14,880 --> 00:03:19,570
Một trong những hạn chế quan trọng nhất của cơ sở dữ liệu SQL là hiệu suất và kích thước.

49
00:03:19,590 --> 00:03:25,410
Vì cơ sở dữ liệu quan hệ duy trì lược đồ cho từng bản ghi và thực thi các giao dịch, nên hiệu suất

50
00:03:25,410 --> 00:03:28,350
suy giảm khi cơ sở dữ liệu ngày càng lớn hơn.

51
00:03:28,380 --> 00:03:31,320
Đây chính là vấn đề mà phong trào NoSQL đang cố gắng giải quyết.

52
00:03:31,350 --> 00:03:35,310
Điểm mạnh nhất của NoSQL là khả năng mở rộng và hiệu suất.

53
00:03:35,340 --> 00:03:40,110
Cơ sở dữ liệu NoSQL có thể trở nên rất lớn và chúng thường được phân bổ trên nhiều máy chủ.

54
00:03:40,110 --> 00:03:47,760
Ví dụ, Baidu, công cụ tìm kiếm của Trung Quốc lưu trữ hơn 300TB trên MongoDB, một trong những

55
00:03:47,760 --> 00:03:49,320
cơ sở dữ liệu NoSQL phổ biến.

56
00:03:49,320 --> 00:03:53,940
Và không có gì lạ khi nhìn vào cơ sở dữ liệu NoSQL với hàng tỷ thực thể.

57
00:03:54,930 --> 00:04:01,020
Những xu hướng này quyết định khả năng của cơ sở dữ liệu NoSQL và sự khác biệt giữa chúng với cơ sở dữ liệu truyền thống

58
00:04:01,020 --> 00:04:02,190
Cơ sở dữ liệu SQL.

59
00:04:02,340 --> 00:04:06,450
Trước hết, cơ sở dữ liệu NoSQL nói chung không có lược đồ.

60
00:04:06,480 --> 00:04:12,150
Điều đó có nghĩa là trong khi cơ sở dữ liệu SQL lưu trữ dữ liệu trong một bảng được xác định rõ ràng với

61
00:04:12,180 --> 00:04:15,540
cột, xác định lược đồ thực tế cho các thực thể.

62
00:04:15,570 --> 00:04:18,360
Cơ sở dữ liệu NoSQL không áp đặt bất kỳ lược đồ nào.

63
00:04:18,390 --> 00:04:23,220
Họ xây dựng những thực thể hoàn toàn khác nhau với các trường hoàn toàn khác nhau trong cùng một bảng.

64
00:04:23,580 --> 00:04:30,150
Thông thường các thực thể này được lưu trữ dưới dạng tài liệu Json và vì Json là định dạng hoàn toàn linh hoạt nên bạn

65
00:04:30,150 --> 00:04:32,610
không giới hạn ở một lĩnh vực hoặc quy mô cụ thể.

66
00:04:32,640 --> 00:04:33,540
Thật tuyệt vời.

67
00:04:33,540 --> 00:04:39,270
Nếu ứng dụng của bạn sẽ lưu trữ dữ liệu bán cấu trúc hoặc không có cấu trúc không có cấu trúc cụ thể

68
00:04:39,270 --> 00:04:39,720
lược đồ.

69
00:04:39,810 --> 00:04:44,130
Trong trường hợp này, tính linh hoạt mà cơ sở dữ liệu NoSQL mang lại là một lợi thế lớn.

70
00:04:44,430 --> 00:04:47,470
Tiếp theo, chúng ta hãy nói về giao dịch.

71
00:04:47,490 --> 00:04:53,850
Chúng tôi đã giải thích giao dịch là gì trong cơ sở dữ liệu quan hệ và tại sao nó lại quan trọng với cơ sở dữ liệu NoSQL.

72
00:04:53,880 --> 00:04:55,780
Hỗ trợ giao dịch rất đa dạng.

73
00:04:55,800 --> 00:04:59,970
Hầu hết các cơ sở dữ liệu đều hỗ trợ một khái niệm gọi là tính nhất quán cuối cùng.

74
00:05:00,050 --> 00:05:05,230
Có nghĩa là cơ sở dữ liệu đảm bảo rằng hành động sẽ được thực hiện, nhưng nó sẽ không đảm bảo khi nào

75
00:05:05,230 --> 00:05:06,970
chính xác nó sẽ được thực hiện.

76
00:05:07,030 --> 00:05:12,520
Tất nhiên, ở đây chúng ta không nói đến phút và thường không nói đến giây, nhưng nó sẽ không diễn ra ngay lập tức.

77
00:05:12,550 --> 00:05:17,500
Điều này có nghĩa là mã phải có khả năng xử lý được sự không nhất quán tạm thời trong dữ liệu.

78
00:05:17,710 --> 00:05:19,660
Điều này có thể nghe có vẻ lạ.

79
00:05:19,660 --> 00:05:22,630
Tại sao cơ sở dữ liệu NoSQL lại không hỗ trợ giao dịch acid?

80
00:05:23,170 --> 00:05:27,370
Câu trả lời nằm ở tuyên bố sứ mệnh, quy mô và hiệu suất của NoSQL.

81
00:05:27,490 --> 00:05:32,530
Như chúng tôi đã đề cập trước đó, các giao dịch là thứ ngăn chặn cơ sở dữ liệu quan hệ đạt đến cấp độ

82
00:05:32,530 --> 00:05:36,270
hiệu suất mà người dùng và người tạo dữ liệu lớn ngày nay yêu cầu.

83
00:05:36,280 --> 00:05:40,280
Và đó là lý do tại sao cơ sở dữ liệu NoSQL chỉ hỗ trợ một phần của định nghĩa.

84
00:05:40,300 --> 00:05:45,550
Mỗi cơ sở dữ liệu chọn phiên bản hỗ trợ giao dịch riêng của mình và điều quan trọng là phải xem xét kỹ lưỡng

85
00:05:45,550 --> 00:05:48,970
hỗ trợ giao dịch của cơ sở dữ liệu NoSQL mà bạn sẽ làm việc.

86
00:05:49,390 --> 00:05:52,000
Cuối cùng, chúng ta hãy nói về việc truy vấn.

87
00:05:52,270 --> 00:05:54,910
Cơ sở dữ liệu quan hệ cho phép truy cập vào dữ liệu của chúng.

88
00:05:54,910 --> 00:06:00,050
Sử dụng ngôn ngữ SQL là ngôn ngữ phổ biến và có thể sử dụng trên bất kỳ cơ sở dữ liệu quan hệ nào.

89
00:06:00,050 --> 00:06:04,460
Mặt khác, không có tiêu chuẩn nào để truy cập dữ liệu trong cơ sở dữ liệu NoSQL.

90
00:06:04,490 --> 00:06:09,020
Mỗi cơ sở dữ liệu có ngôn ngữ và trình điều khiển riêng và yêu cầu cách học riêng.

91
00:06:09,050 --> 00:06:13,520
Thành thật mà nói, điều này khá khó chịu và tôi hy vọng nó sẽ được thay đổi trong tương lai.

92
00:06:13,520 --> 00:06:15,410
Nhưng hiện tại thì đó là một thỏa thuận.

93
00:06:15,890 --> 00:06:17,300
Vậy chúng ta hãy tóm tắt lại nhé.

94
00:06:17,330 --> 00:06:23,240
Nếu hệ thống của bạn không quá lớn và theo tôi thì lớn nghĩa là ít nhất mười terabyte và dữ liệu là

95
00:06:23,240 --> 00:06:24,170
chủ yếu có cấu trúc.

96
00:06:24,170 --> 00:06:28,700
Và nếu tính nhất quán của dữ liệu là điều quan trọng với bạn, hãy sử dụng cơ sở dữ liệu SQL truyền thống.

97
00:06:28,730 --> 00:06:30,920
Thực ra, việc bạn chọn cái nào cũng không quan trọng.

98
00:06:30,950 --> 00:06:32,480
Tất cả họ đều đang làm việc rất tốt.

99
00:06:32,510 --> 00:06:36,290
Chỉ cần đảm bảo nó tương thích với nền tảng phát triển của bạn là được.

100
00:06:36,320 --> 00:06:42,550
Mặt khác, nếu bạn đang có kế hoạch lưu trữ một kho dữ liệu phi cấu trúc lớn, hãy chọn cơ sở dữ liệu NoSQL,

101
00:06:42,560 --> 00:06:48,170
MongoDB là cơ sở dữ liệu NoSQL phổ biến nhất hiện nay với sự hỗ trợ từ mọi nhà cung cấp phần mềm lớn.

102
00:06:48,170 --> 00:06:49,790
Vì vậy, đây là sự lựa chọn tự nhiên.

103
00:06:49,850 --> 00:06:52,040
Như thường lệ, hãy giữ bảng này làm tài liệu tham khảo.

104
00:06:52,040 --> 00:06:55,310
Tôi chắc chắn nó sẽ có ích cho hệ thống mà bạn đang làm việc.

105
00:06:55,430 --> 00:06:57,350
À, còn một điều nữa.

106
00:06:57,380 --> 00:07:03,620
Gần đây, ranh giới giữa cơ sở dữ liệu SQL và NoSQL đã bắt đầu mờ đi và chúng ta đang thấy nhiều khả năng khác nhau

107
00:07:03,620 --> 00:07:05,690
rò rỉ từ loại này sang loại khác.

108
00:07:05,690 --> 00:07:11,810
Ví dụ, theo truyền thống, cơ sở dữ liệu NoSQL rất tuyệt vời trong việc truy vấn các tài liệu Json, trong khi cơ sở dữ liệu SQL,

109
00:07:11,810 --> 00:07:13,970
Nói thẳng ra là tệ lắm.

110
00:07:14,000 --> 00:07:20,030
Tuy nhiên, ngày nay chúng ta có thể tìm thấy khả năng truy vấn Json tuyệt vời trong các cơ sở dữ liệu như SQL Server và Postgres.

111
00:07:20,360 --> 00:07:25,970
Trên thực tế, tôi có một khách hàng đã quyết định từ bỏ MongoDB để chuyển sang SQL Server vì anh ấy thực sự thích

112
00:07:25,970 --> 00:07:30,170
sự kết hợp mà nó cung cấp bao gồm hỗ trợ giao dịch đầy đủ và truy vấn Json.

113
00:07:30,200 --> 00:07:33,290
Một ví dụ khác là hỗ trợ giao dịch đã đề cập ở trên.

114
00:07:33,320 --> 00:07:39,320
MongoDB đã bổ sung hỗ trợ acid đầy đủ cách đây vài tháng, đây là một bước đột phá lớn đối với NoSQL

115
00:07:39,320 --> 00:07:39,920
cơ sở dữ liệu.

116
00:07:39,950 --> 00:07:45,530
Họ tuyên bố rằng nó sẽ không ảnh hưởng đến hiệu suất và sẽ rất thú vị khi xem liệu các nhà cung cấp NoSQL khác có làm như vậy không

117
00:07:45,530 --> 00:07:46,820
sẽ áp dụng thái độ này.

