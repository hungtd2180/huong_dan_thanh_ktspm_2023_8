00:00:00,320 --> 00:00:06,860
Naming conventions are a set of rules that define how do we name various code elements such as classes,
Quy ước đặt tên là một tập hợp các quy tắc xác định cách chúng ta đặt tên cho các thành phần mã khác nhau như lớp,


00:00:06,860 --> 00:00:10,280
methods, variables, constants and more.
phương pháp, biến, hằng số và nhiều hơn nữa.


00:00:10,310 --> 00:00:15,410
The role of naming conventions is to make our code more readable and easy to understand.
Vai trò của quy ước đặt tên là làm cho mã của chúng ta dễ đọc và dễ hiểu hơn.


00:00:15,440 --> 00:00:21,380
When we agree on a convention, every code segment becomes clearer with the various elements easily
Khi chúng ta đồng ý về một quy ước, mọi đoạn mã trở nên rõ ràng hơn với các thành phần khác nhau một cách dễ dàng


00:00:21,380 --> 00:00:23,090
distinguished from the others.
phân biệt với những người khác.


00:00:23,120 --> 00:00:29,000
Note that naming conventions are not enforced by compilers, and the code will work perfectly without
Lưu ý rằng các quy ước đặt tên không được thực thi bởi trình biên dịch và mã sẽ hoạt động hoàn hảo mà không cần


00:00:29,000 --> 00:00:30,410
using any convention.
sử dụng bất kỳ quy ước nào.


00:00:30,410 --> 00:00:34,340
But a code without conventions will be messy and hard to work with.
Nhưng một bộ mã không có quy ước sẽ lộn xộn và khó sử dụng.


00:00:35,290 --> 00:00:39,130
Naming conventions usually deal with two types of rules.
Quy ước đặt tên thường liên quan đến hai loại quy tắc.


00:00:39,430 --> 00:00:45,880
One structure of the name casing underscores et cetera and content of the name.
Một cấu trúc của tên bao gồm các dấu gạch dưới, v.v. và nội dung của tên.


00:00:45,880 --> 00:00:48,880
What kind of words can be used in the name?
Những loại từ nào có thể được sử dụng trong tên?


00:00:49,840 --> 00:00:54,500
There are many types of code conventions, and I'll cover here the most common ones.
Có nhiều loại quy ước mã hóa và tôi sẽ đề cập đến những loại phổ biến nhất ở đây.


00:00:54,520 --> 00:00:57,100
First, let's talk about camel case.
Đầu tiên, chúng ta hãy nói về vỏ lạc đà.


00:00:57,790 --> 00:01:04,030
The camel case notation basically states that if a name contains more than one word, then the first
Ký hiệu viết hoa lạc đà về cơ bản nêu rằng nếu một tên chứa nhiều hơn một từ, thì 15 từ đầu tiên


00:01:04,030 --> 00:01:07,180
letter of the second word onward should be capitalized.
chữ cái của từ thứ hai trở đi phải viết hoa.


00:01:07,210 --> 00:01:13,030
For example, if a class is named car engine in camel case, it will look like this.
Ví dụ, nếu một lớp được đặt tên là car engine theo kiểu chữ camel, nó sẽ trông như thế này.


00:01:13,360 --> 00:01:18,760
There are two variants of camel case, upper camel case and lower camel case.
Có hai loại camel case, loại camel case trên và loại camel case dưới.


00:01:18,790 --> 00:01:23,170
The difference between them is the casing of the first letter of the first word.
Sự khác biệt giữa chúng là chữ cái đầu tiên của từ đầu tiên.


00:01:23,230 --> 00:01:28,090
As you can guess, with upper camel case, it will be capitalized while in lower camel case, it will
Như bạn có thể đoán, với chữ hoa camel, nó sẽ được viết hoa trong khi với chữ thường camel, nó sẽ là


00:01:28,090 --> 00:01:28,720
not.
không.


00:01:29,440 --> 00:01:36,020
The Camelcase convention is very popular in Java, C-sharp, JavaScript and Swift and is also recommended
Quy ước Camelcase rất phổ biến trong Java, C-sharp, JavaScript và Swift và cũng được khuyến nghị


00:01:36,020 --> 00:01:38,450
for class names in Python and Ruby.
cho tên lớp trong Python và Ruby.


00:01:39,390 --> 00:01:43,410
Next is the lowercase separated by underscores convention.
Tiếp theo là chữ thường được phân tách bằng dấu gạch dưới.


00:01:43,950 --> 00:01:50,490
As its name implies in this convention, the name contains only lowercase letters and the words are
Như tên gọi của nó ngụ ý trong quy ước này, tên chỉ chứa các chữ cái thường và các từ là


00:01:50,490 --> 00:01:52,450
separated by an underscore.
được phân cách bằng dấu gạch dưới.


00:01:52,470 --> 00:01:57,510
For example, a variable named num of parts will look like this.
Ví dụ, một biến có tên num of parts sẽ trông như thế này.


00:01:58,290 --> 00:02:02,610
This convention is mainly used in Python and Ruby for naming variables.
Quy ước này chủ yếu được sử dụng trong Python và Ruby để đặt tên biến.


00:02:03,930 --> 00:02:07,890
Another similar convention is capitalized with underscores.
Một quy ước tương tự khác là viết hoa chữ cái đầu và gạch dưới.


00:02:08,039 --> 00:02:10,410
The difference between this one and the lowercase.
Sự khác biệt giữa chữ này và chữ thường.


00:02:10,410 --> 00:02:14,610
Separated by underscores is that while in the former we use only lowercase letters.
Được phân tách bằng dấu gạch dưới là trong khi ở phần trước chúng ta chỉ sử dụng chữ thường.


00:02:14,610 --> 00:02:17,250
In the latter we use only capitalized letters.
Trong phần sau chúng ta chỉ sử dụng chữ viết hoa.


00:02:17,340 --> 00:02:24,270
For example, the variable days in week will look like this in the capitalized with underscores.
Ví dụ, các biến days trong week sẽ trông như thế này khi viết hoa có dấu gạch dưới.


00:02:24,810 --> 00:02:29,310
This convention is often used in Java, Python and Ruby for naming constants.
Quy ước này thường được sử dụng trong Java, Python và Ruby để đặt tên hằng số.


00:02:31,600 --> 00:02:34,820
The last convention we will talk about is a Hungarian notation.
Quy ước cuối cùng chúng ta sẽ nói đến là ký hiệu Hungary.


00:02:34,840 --> 00:02:40,540
The Hungarian notation was very popular in the 90s and there are some developers still using it today.
Ký hiệu tiếng Hungary rất phổ biến vào những năm 90 và hiện nay vẫn có một số nhà phát triển sử dụng nó.


00:02:40,750 --> 00:02:45,730
The Hungarian notation basically states that the type information should be part of the name of the
Ký hiệu tiếng Hungary về cơ bản nêu rằng thông tin loại phải là một phần của tên


00:02:45,730 --> 00:02:46,360
variable.
biến đổi.


00:02:46,390 --> 00:02:52,420
For example, if you have a variable of type string that contains a first name, the variable name will
Ví dụ, nếu bạn có một biến kiểu chuỗi chứa tên, biến name sẽ


00:02:52,420 --> 00:02:53,410
look like this.
trông như thế này.


00:02:53,920 --> 00:02:58,010
As you can see, the name has a prefix that represents the type name.
Như bạn có thể thấy, tên có tiền tố biểu thị tên loại.


00:02:58,030 --> 00:03:00,820
It's not a full type name, but a short version of it.
Đây không phải là tên loại đầy đủ mà là phiên bản rút gọn của nó.


00:03:00,850 --> 00:03:04,000
Usually an abbreviation of three letters is used.
Thông thường người ta sử dụng chữ viết tắt gồm ba chữ cái.


00:03:04,030 --> 00:03:08,530
Again, this is not a widely used notation and should generally be avoided.
Một lần nữa, đây không phải là ký hiệu được sử dụng rộng rãi và nói chung nên tránh sử dụng.


00:03:10,560 --> 00:03:14,010
The second part of the naming convention deals with the contents of the name.
Phần thứ hai của quy ước đặt tên liên quan đến nội dung của tên.


00:03:14,010 --> 00:03:16,290
And there is an important distinction to make here.
Và có một sự phân biệt quan trọng cần thực hiện ở đây.


00:03:16,320 --> 00:03:21,840
As a rule of thumb, class names should always be nouns, and method names should always be imperative
Theo nguyên tắc chung, tên lớp phải luôn là danh từ và tên phương thức phải luôn là mệnh lệnh


00:03:21,840 --> 00:03:22,500
verbs.
động từ.


00:03:22,530 --> 00:03:28,890
For example, a class that handles data retrieval should be called data retrieval or simply data.
Ví dụ, một lớp xử lý việc truy xuất dữ liệu nên được gọi là truy xuất dữ liệu hoặc đơn giản là dữ liệu.


00:03:28,890 --> 00:03:34,080
And the method in this class that actually retrieves the data will be called retrieve data.
Và phương thức trong lớp này thực sự truy xuất dữ liệu sẽ được gọi là truy xuất dữ liệu.


00:03:34,470 --> 00:03:39,360
The reason for this is that a class should always represent an entity which is described as a noun,
Lý do cho điều này là một lớp luôn phải đại diện cho một thực thể được mô tả như một danh từ,


00:03:39,360 --> 00:03:44,160
while a method should represent an action on this entity and should be named accordingly.
trong khi một phương pháp phải biểu diễn một hành động trên thực thể này và phải được đặt tên phù hợp.


00:03:44,460 --> 00:03:49,290
So to summarize this lecture, always work with a specific naming convention.
Vì vậy, để tóm tắt bài giảng này, hãy luôn làm việc theo một quy ước đặt tên cụ thể.


00:03:49,290 --> 00:03:53,880
It doesn't really matter which convention you will work with, although it's a good idea to stick to
Thực ra, không quan trọng bạn sẽ làm việc với quy ước nào, mặc dù tốt nhất là bạn nên tuân thủ quy ước


00:03:53,880 --> 00:03:58,230
a common standard, but make sure to make this decision as soon as possible.
một tiêu chuẩn chung, nhưng hãy đảm bảo đưa ra quyết định này càng sớm càng tốt.


00:03:58,230 --> 00:04:02,220
And even more important, always follow the convention.
Và quan trọng hơn nữa, hãy luôn tuân thủ theo quy ước.


00:04:02,520 --> 00:04:06,570
You will see the code will be much more readable and easy to understand.
Bạn sẽ thấy mã dễ đọc và dễ hiểu hơn nhiều.


