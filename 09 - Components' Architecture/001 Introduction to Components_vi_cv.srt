1
00:00:00,230 --> 00:00:02,810
Chào mừng đến với phần Kiến trúc thành phần.

2
00:00:03,410 --> 00:00:08,360
Cho đến nay, chúng ta đã thảo luận về nhiều chủ đề khác nhau cần thiết để chuẩn bị cho bạn về kiến trúc

3
00:00:08,360 --> 00:00:08,970
thiết kế.

4
00:00:08,990 --> 00:00:13,440
Chúng tôi đã thảo luận về quy trình tư duy, yêu cầu, thuộc tính chất lượng và nhiều nội dung khác.

5
00:00:13,460 --> 00:00:17,210
Và bây giờ, thưa quý ông, quý bà, đã đến lúc nói chuyện thật sự.

6
00:00:17,240 --> 00:00:21,350
Trong phần này, chúng ta sẽ thảo luận về kiến trúc của các thành phần phần mềm.

7
00:00:21,380 --> 00:00:26,720
Bây giờ, trước khi đi sâu hơn, điều quan trọng là phải hiểu ý nghĩa của thành phần phần mềm trong phần này.

8
00:00:26,720 --> 00:00:27,470
bối cảnh.

9
00:00:28,070 --> 00:00:34,820
Thành phần phần mềm, đôi khi còn được gọi là dịch vụ, là một đoạn mã chạy trong một quy trình duy nhất,

10
00:00:34,820 --> 00:00:37,100
có nghĩa là nó không được phân phối.

11
00:00:37,400 --> 00:00:43,580
Các hệ thống hiện đại thường được phân phối, nghĩa là chúng bao gồm các thành phần phần mềm độc lập,

12
00:00:43,580 --> 00:00:49,490
được triển khai trên các quy trình riêng biệt và thường trên các thùng chứa hoặc máy chủ riêng biệt.

13
00:00:50,000 --> 00:00:55,140
Bạn có thể đã nghe nói về ứng dụng microservices, vì vậy ứng dụng và nhiều thứ khác nữa.

14
00:00:55,160 --> 00:01:01,620
Tất cả các hệ thống này đều là hệ thống phân tán có các thành phần hoặc dịch vụ được triển khai độc lập và

15
00:01:01,620 --> 00:01:05,400
giao tiếp thông qua một số loại giao thức mạng, thường là Http.

16
00:01:05,940 --> 00:01:10,950
Khi nói về kiến trúc phần mềm, thực ra chúng ta đang nói đến hai cấp độ kiến trúc.

17
00:01:11,190 --> 00:01:13,570
Đầu tiên là kiến trúc thành phần.

18
00:01:13,590 --> 00:01:18,180
Đây là kiến trúc của từng thành phần riêng lẻ và đây là chủ đề của phần này.

19
00:01:18,240 --> 00:01:23,820
Kiến trúc thành phần xử lý các thành phần bên trong khác nhau của mã, cách chúng tương tác

20
00:01:23,820 --> 00:01:27,480
với nhau và cách thức thực hiện nhanh chóng và dễ dàng để bảo trì.

21
00:01:28,580 --> 00:01:31,760
Cấp độ thứ hai là kiến trúc của toàn bộ hệ thống.

22
00:01:31,790 --> 00:01:38,180
Kiến trúc loại này xử lý bức tranh lớn hơn và đảm bảo hệ thống có khả năng mở rộng, đáng tin cậy,

23
00:01:38,180 --> 00:01:39,830
nhanh chóng và dễ bảo trì.

24
00:01:39,860 --> 00:01:43,010
Chúng ta sẽ thảo luận về kiến trúc hệ thống sau trong khóa học này.

25
00:01:43,970 --> 00:01:49,220
Bây giờ, điều quan trọng cần lưu ý là một số nguyên tắc mà chúng ta sẽ thảo luận trong phần này khá thấp

26
00:01:49,220 --> 00:01:55,250
và một số người sẽ nói là thuộc trách nhiệm của người đứng đầu nhóm phát triển chứ không phải của kiến trúc sư.

27
00:01:55,280 --> 00:02:00,230
Điều này có thể đúng trong một số tổ chức, nhưng tôi tin chắc rằng kiến trúc sư nên

28
00:02:00,230 --> 00:02:01,730
cũng phải nhận thức rõ về chúng.

29
00:02:01,760 --> 00:02:06,830
Như bạn có thể nhớ lại từ các phần trước, kiến trúc sư không bao giờ nên tách mình khỏi mã

30
00:02:06,830 --> 00:02:12,500
và anh ta phải có khả năng thảo luận thông minh về các mẫu mã hóa và lập trình nói chung.

31
00:02:12,530 --> 00:02:17,600
Chính vì lý do này mà kiến trúc sư ít nhất phải nhận thức được hoạt động bên trong của

32
00:02:17,600 --> 00:02:23,450
các thành phần riêng lẻ và phải có khả năng đảm bảo thiết kế của mình hỗ trợ được bức tranh toàn cảnh của hệ thống.

33
00:02:23,540 --> 00:02:29,400
Và một lần nữa, trong nhiều tổ chức, nếu không muốn nói là hầu hết, kiến trúc của các thành phần chắc chắn là

34
00:02:29,400 --> 00:02:31,010
trách nhiệm của kiến trúc sư.

35
00:02:31,020 --> 00:02:36,690
Và trong phần này chúng ta sẽ thảo luận chính xác về cách tạo ra một kiến trúc tuyệt vời cho các thành phần mã.

36
00:02:36,690 --> 00:02:37,680
Vậy chúng ta đi thôi.

