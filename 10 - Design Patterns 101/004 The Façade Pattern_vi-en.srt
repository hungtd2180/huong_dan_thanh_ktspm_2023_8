00:00:00,440 --> 00:00:05,900
The facade pattern is one of the simplest patterns and still one of the most important of them.
Hoa văn mặt tiền là một trong những hoa văn đơn giản nhất và vẫn là một trong những hoa văn quan trọng nhất.


00:00:06,080 --> 00:00:12,410
In this pattern, a layer of abstraction is created in order to mask complex actions that lies underneath
Trong mô hình này, một lớp trừu tượng được tạo ra để che giấu các hành động phức tạp nằm bên dưới


00:00:12,410 --> 00:00:15,560
it, thus helping the client to perform this action.
nó, do đó giúp khách hàng thực hiện hành động này.


00:00:15,590 --> 00:00:18,380
Again, let's explain it with an example.
Một lần nữa, chúng ta hãy giải thích bằng một ví dụ.


00:00:18,560 --> 00:00:20,820
Say we have a banking system.
Giả sử chúng ta có một hệ thống ngân hàng.


00:00:20,840 --> 00:00:24,740
Naturally, we need to have a way to transfer money between accounts.
Tất nhiên, chúng ta cần có cách để chuyển tiền giữa các tài khoản.


00:00:24,770 --> 00:00:30,500
The developers analyze the transfer process and comes up with a list of actions that should be performed.
Các nhà phát triển phân tích quá trình chuyển giao và đưa ra danh sách các hành động cần thực hiện.


00:00:30,620 --> 00:00:31,400
One.
Một.


00:00:31,430 --> 00:00:35,150
Make sure the accounts participating in the transfer actually exist.
Hãy đảm bảo rằng các tài khoản tham gia chuyển tiền thực sự tồn tại.


00:00:35,300 --> 00:00:39,980
To make sure there is enough money in the first account to perform the transfer.
Để đảm bảo có đủ tiền trong tài khoản đầu tiên để thực hiện chuyển khoản.


00:00:40,070 --> 00:00:40,880
Three.
Ba.


00:00:40,910 --> 00:00:43,550
Withdraw the money from the first account.
Rút tiền từ tài khoản đầu tiên.


00:00:43,580 --> 00:00:44,450
Four.
Bốn.


00:00:44,480 --> 00:00:46,890
Deposit the money in the second account.
Gửi tiền vào tài khoản thứ hai.


00:00:46,910 --> 00:00:48,170
And five.
Và năm.


00:00:48,200 --> 00:00:52,610
Add event in the account log documenting the transfer for both the accounts.
Thêm sự kiện vào nhật ký tài khoản để ghi lại quá trình chuyển tiền cho cả hai tài khoản.


00:00:52,640 --> 00:00:58,280
Now, being the pedantic developer they are, they build these five actions as five separate methods
Bây giờ, với tư cách là nhà phát triển cầu kỳ, họ xây dựng năm hành động này như năm phương pháp riêng biệt


00:00:58,280 --> 00:01:02,550
in the code, which is good because all of these actions can stand on their own.
trong mã, điều này rất tốt vì tất cả các hành động này đều có thể tự đứng vững.


00:01:03,000 --> 00:01:08,250
For example, we might need to make a check for funds on a specific account even when not transferring
Ví dụ, chúng ta có thể cần phải kiểm tra tiền trong một tài khoản cụ thể ngay cả khi không chuyển


00:01:08,250 --> 00:01:08,790
money.
tiền.


00:01:09,210 --> 00:01:14,910
As a result of this, though, if a client now wants to transfer money, he has to access five methods.
Tuy nhiên, do đó, nếu khách hàng muốn chuyển tiền, họ phải sử dụng năm phương pháp.


00:01:14,940 --> 00:01:17,100
It's a long and error prone process.
Đây là một quá trình dài và dễ xảy ra lỗi.


00:01:17,130 --> 00:01:20,340
It's easy to forget one method or use the wrong parameters.
Thật dễ dàng để quên một phương pháp hoặc sử dụng sai tham số.


00:01:20,370 --> 00:01:22,680
In short, a lot can go wrong here.
Tóm lại, có rất nhiều điều có thể xảy ra sai ở đây.


00:01:22,710 --> 00:01:24,990
The facade pattern comes to the rescue.
Mẫu mặt tiền sẽ giải quyết vấn đề.


00:01:25,020 --> 00:01:31,230
The developers implement a facade which stands in front of the specific method and exposes a specific
Các nhà phát triển triển khai một mặt tiền đứng trước phương pháp cụ thể và phơi bày một phương pháp cụ thể


00:01:31,230 --> 00:01:32,540
focus functionality.
chức năng tập trung.


00:01:32,550 --> 00:01:38,340
In our case, the facade is a method named transfer money, which accepts three arguments, account
Trong trường hợp của chúng tôi, mặt tiền là một phương thức có tên là chuyển tiền, chấp nhận ba đối số, tài khoản


00:01:38,340 --> 00:01:42,570
to withdraw, account to deposit and some behind the scenes.
để rút tiền, tài khoản để gửi tiền và một số hoạt động đằng sau hậu trường.


00:01:42,600 --> 00:01:48,180
This method uses the above mentioned five methods to perform the transfer and not using any specific
Phương pháp này sử dụng năm phương pháp được đề cập ở trên để thực hiện chuyển giao và không sử dụng bất kỳ 31 cụ thể nào


00:01:48,180 --> 00:01:50,130
code written for the method itself.
mã được viết cho chính phương pháp đó.


00:01:50,160 --> 00:01:53,490
In other words, the facade does not invent new functionality.
Nói cách khác, mặt tiền không tạo ra chức năng mới.


00:01:53,520 --> 00:01:57,180
It simply packages an existing one into an easy to use method.
Nó chỉ đơn giản là đóng gói một cái hiện có thành một phương pháp dễ sử dụng.


00:01:57,390 --> 00:02:03,810
Using the facade pattern makes your code much more readable and easy to use and is highly recommended.
Sử dụng mẫu facade giúp mã của bạn dễ đọc và sử dụng hơn nhiều và được khuyến khích sử dụng.


