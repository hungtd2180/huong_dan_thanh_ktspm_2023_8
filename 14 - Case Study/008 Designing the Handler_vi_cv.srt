1
00:00:00,350 --> 00:00:02,540
Dịch vụ tiếp theo của chúng tôi là người xử lý.

2
00:00:02,630 --> 00:00:08,690
Như bạn có thể nhớ, trình xử lý có trách nhiệm xác thực các thông báo, chuyển chúng và

3
00:00:08,690 --> 00:00:10,910
lưu trữ chúng trong kho dữ liệu của hệ thống.

4
00:00:11,060 --> 00:00:16,580
Một trong những yếu tố chính sẽ ảnh hưởng đến thiết kế trình xử lý là thực tế là các thông điệp sẽ được

5
00:00:16,580 --> 00:00:21,110
đã xử lý đang chờ trong hàng đợi sau khi được người nhận đặt vào đó.

6
00:00:21,170 --> 00:00:24,950
Thực tế này quyết định loại ứng dụng của dịch vụ xử lý.

7
00:00:24,980 --> 00:00:27,920
Bạn còn nhớ cách chúng ta chọn loại dịch vụ ghi nhật ký không?

8
00:00:27,950 --> 00:00:31,890
Vâng, dịch vụ xử lý khá giống với dịch vụ ghi nhật ký.

9
00:00:31,910 --> 00:00:37,100
Các bản ghi nhật ký được dịch vụ kéo từ hàng đợi và sau đó được lưu trữ trong kho dữ liệu.

10
00:00:37,130 --> 00:00:39,170
Dịch vụ xử lý hoạt động tương tự.

11
00:00:39,170 --> 00:00:45,800
Nó kéo các tin nhắn từ hàng đợi, xử lý chúng và lưu trữ chúng trong kho dữ liệu trong dịch vụ ghi nhật ký.

12
00:00:45,830 --> 00:00:51,680
Thực tế này khiến chúng tôi quyết định rằng nó sẽ là một dịch vụ Windows vì không có phản hồi yêu cầu

13
00:00:51,680 --> 00:00:55,940
mô hình thực thi ở đây, nhưng là một dịch vụ luôn bật và kéo hàng đợi.

14
00:00:56,690 --> 00:01:00,000
Và điều tương tự cũng xảy ra với dịch vụ xử lý.

15
00:01:00,030 --> 00:01:02,310
Đây không phải là dịch vụ phản hồi yêu cầu.

16
00:01:02,340 --> 00:01:05,190
Nó luôn hoạt động và bận rộn kéo hàng đợi.

17
00:01:05,220 --> 00:01:09,240
Vì vậy, dịch vụ xử lý cũng sẽ là dịch vụ Windows.

18
00:01:09,330 --> 00:01:10,050
Tốt.

19
00:01:10,320 --> 00:01:12,810
Tiếp theo là công nghệ.

20
00:01:12,840 --> 00:01:17,280
Cho đến nay, chúng tôi đã có hai dịch vụ mà chúng tôi đã xác định được công nghệ.

21
00:01:17,310 --> 00:01:19,350
Dịch vụ ghi nhật ký và người nhận.

22
00:01:19,380 --> 00:01:21,750
Cả hai đều sử dụng Dotnet core.

23
00:01:21,900 --> 00:01:27,240
Vì có vẻ như không có lý do thực sự nào để lựa chọn công nghệ khác cho dịch vụ xử lý vì

24
00:01:27,240 --> 00:01:32,460
không có yêu cầu đặc biệt nào và nó sẽ được phát triển bởi cùng một nhóm đã phát triển cái kia

25
00:01:32,460 --> 00:01:36,570
dịch vụ, chúng ta có thể hoàn toàn thoải mái khi sử dụng Dotnet core ở đây.

26
00:01:36,840 --> 00:01:38,190
Được, tốt.

27
00:01:38,280 --> 00:01:40,140
Và bây giờ là đến phần kiến trúc.

28
00:01:40,140 --> 00:01:44,670
Chúng tôi sẽ sử dụng mô hình kiến trúc phân lớp truyền thống ở đây, giống như trong các dịch vụ khác.

29
00:01:44,700 --> 00:01:47,550
Hãy cùng xem xét những lớp nào có liên quan ở đây.

30
00:01:47,580 --> 00:01:49,860
Giao diện dịch vụ đầu tiên.

31
00:01:50,100 --> 00:01:52,050
Vâng, chúng tôi không có.

32
00:01:52,080 --> 00:01:54,930
Dịch vụ này không cung cấp bất kỳ API nào.

33
00:01:54,960 --> 00:01:58,170
Nó luôn hoạt động và khởi tạo các cuộc gọi đến hàng đợi.

34
00:01:58,200 --> 00:02:01,110
Không phải chờ yêu cầu từ các dịch vụ khác.

35
00:02:01,140 --> 00:02:06,220
Vì vậy, lớp này thay vì hiển thị API sẽ sắp xếp công việc theo hàng đợi.

36
00:02:06,240 --> 00:02:11,520
Cụ thể, lớp này chịu trách nhiệm tính thời gian thăm dò hàng đợi và thực hiện thực tế

37
00:02:11,520 --> 00:02:12,130
bỏ phiếu.

38
00:02:12,150 --> 00:02:15,750
Chúng ta hãy gọi lớp thăm dò này giống như trong dịch vụ ghi nhật ký.

39
00:02:16,050 --> 00:02:16,650
Tốt.

40
00:02:16,860 --> 00:02:19,080
Lớp tiếp theo là lớp logic nghiệp vụ.

41
00:02:19,080 --> 00:02:22,440
Và đúng vậy, dịch vụ xử lý chắc chắn cần một lớp như vậy.

42
00:02:22,470 --> 00:02:27,780
Lớp này chịu trách nhiệm xác thực và xử lý các thông điệp, đây là công việc điển hình của doanh nghiệp

43
00:02:27,780 --> 00:02:28,620
lớp logic.

44
00:02:28,710 --> 00:02:34,830
Bây giờ hãy lưu ý rằng trong một ứng dụng thực tế, chúng ta sẽ thảo luận về cơ chế plugin để cho phép tải động

45
00:02:34,830 --> 00:02:40,890
của trình xác thực và bưu kiện cho các loại tin nhắn cụ thể và đây chắc chắn là cách tiếp cận được khuyến nghị

46
00:02:40,890 --> 00:02:41,210
đây.

47
00:02:41,220 --> 00:02:46,770
Nhưng vì mục đích đơn giản, tôi sẽ bỏ qua điều đó ngay bây giờ và cho rằng việc xác thực và phân tích cú pháp

48
00:02:46,770 --> 00:02:48,940
được mã hóa ngay vào logic kinh doanh.

49
00:02:48,960 --> 00:02:51,660
Và cuối cùng nhưng không kém phần quan trọng, đó là lớp truy cập dữ liệu.

50
00:02:51,690 --> 00:02:57,330
Đây là một lớp cực kỳ quan trọng trong dịch vụ này và nó có trách nhiệm lưu các tin nhắn đã xử lý

51
00:02:57,330 --> 00:02:58,560
vào kho dữ liệu.

52
00:02:58,590 --> 00:03:03,150
Điều này rất quan trọng ở đây và chúng tôi sẽ giữ nó như một phần trong kiến trúc phân lớp của mình.

53
00:03:03,300 --> 00:03:08,730
Và tất nhiên, chúng ta hãy thêm công cụ ghi nhật ký, tương tự như công cụ chúng ta sử dụng trong máy thu, là

54
00:03:08,730 --> 00:03:11,310
theo chiều dọc và có thể tiếp cận được bằng tất cả các lớp.

55
00:03:11,520 --> 00:03:12,390
Tuyệt vời.

56
00:03:12,390 --> 00:03:15,660
Bây giờ chúng ta đã có kiến trúc cho dịch vụ xử lý.

57
00:03:15,690 --> 00:03:17,970
Chúng ta hãy chuyển sang dịch vụ tiếp theo.

