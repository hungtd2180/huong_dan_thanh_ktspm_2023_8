1
00:00:01,290 --> 00:00:06,810
When talking about systems requirements, we usually think along the lines of what the system should

2
00:00:06,810 --> 00:00:07,200
do.

3
00:00:07,230 --> 00:00:10,390
We expect the requirements to deal with the following questions.

4
00:00:10,410 --> 00:00:12,840
What are the business flows of the system?

5
00:00:12,930 --> 00:00:18,540
For example, log in, storing photos, receiving and crunching, telemetry data and more.

6
00:00:19,320 --> 00:00:21,660
What business services should the system have?

7
00:00:21,660 --> 00:00:25,650
For example, logging service data access service Telemetry.

8
00:00:25,650 --> 00:00:27,690
Receiver Telemetry control.

9
00:00:28,340 --> 00:00:30,950
What does the user interface of the system looks like?

10
00:00:30,980 --> 00:00:34,280
The look and feel, general guidance, responsiveness and more.

11
00:00:35,180 --> 00:00:38,370
These requirements are called functional requirements.

12
00:00:38,390 --> 00:00:44,390
You can identify those requirements from miles if they answer the question what the system should do.

13
00:00:44,420 --> 00:00:46,250
They are functional requirements.

14
00:00:46,640 --> 00:00:51,650
Functional requirements are, of course extremely important and no system should be designed and built

15
00:00:51,650 --> 00:00:52,560
without them.

16
00:00:52,580 --> 00:00:58,340
I had the pleasure of working on a system without concrete functional requirements, and I swore I would

17
00:00:58,340 --> 00:00:59,600
never do that again.

18
00:00:59,930 --> 00:01:05,690
However, for the architect, these requirements are important, but not as important as the other kind

19
00:01:05,690 --> 00:01:06,680
of requirements.

20
00:01:07,230 --> 00:01:12,660
These requirements are known as non-functional requirements and these requirements answer roughly this

21
00:01:12,660 --> 00:01:15,720
question What should the system deal with?

22
00:01:16,080 --> 00:01:20,970
Non-functional requirements Describe the various aspects of the system's operation and are not tied

23
00:01:20,970 --> 00:01:23,250
to a specific behavior or logic.

24
00:01:23,280 --> 00:01:31,950
The most common non-functional requirements are performance load data, volume, concurrent users and

25
00:01:31,950 --> 00:01:32,420
SLA.

26
00:01:33,750 --> 00:01:38,400
For those of you not familiar with all these terms, don't worry, we will cover them later in this

27
00:01:38,400 --> 00:01:39,090
section.

28
00:01:39,480 --> 00:01:44,040
Non-functional requirements are the requirements that really interest you as an architect.

29
00:01:44,190 --> 00:01:48,960
I once had a client that asked me to design an architecture for a system he was planning.

30
00:01:48,990 --> 00:01:51,880
On first sight, the system looked quite simple.

31
00:01:51,900 --> 00:01:57,840
Simple rest services that receive data make some calculations, and store the results in a database.

32
00:01:57,870 --> 00:01:58,840
Piece of cake.

33
00:01:58,860 --> 00:02:00,660
Or so I thought.

34
00:02:00,870 --> 00:02:06,570
Towards the end of our requirements meeting, I asked the client what would be the maximum size of the

35
00:02:06,570 --> 00:02:08,009
data received by the service.

36
00:02:08,430 --> 00:02:15,360
He looked at me with an I have no idea face made some phone calls, paid a little, came back to the

37
00:02:15,360 --> 00:02:18,510
table and said, Well, 600MB.

38
00:02:18,540 --> 00:02:19,170
Boom.

39
00:02:20,250 --> 00:02:25,500
No architect in his right mind will expect a rest service to deal with such a huge request.

40
00:02:25,530 --> 00:02:30,360
We had to return to the drawing board and ended up with a completely different architecture.

41
00:02:30,780 --> 00:02:36,690
The rest services have gone and instead we had agents listening to a NoSQL database and waiting for

42
00:02:36,690 --> 00:02:38,100
the data to be stored there.

43
00:02:38,400 --> 00:02:43,830
And that's just one example of an architecture that gets turned upside down because of non-functional

44
00:02:43,830 --> 00:02:44,700
requirements.

45
00:02:44,970 --> 00:02:49,830
So now that we understand the difference between the two kinds of requirements, let's take a closer

46
00:02:49,830 --> 00:02:50,580
look at them.

